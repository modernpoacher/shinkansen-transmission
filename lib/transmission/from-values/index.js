"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.transformObjectSchemaNull=transformObjectSchemaNull;exports.transformObjectSchemaBoolean=transformObjectSchemaBoolean;exports.transformObjectSchemaObject=transformObjectSchemaObject;exports.transformObjectSchemaArray=transformObjectSchemaArray;exports.transformObjectSchemaString=transformObjectSchemaString;exports.transformObjectSchemaNumber=transformObjectSchemaNumber;exports.transformObjectSchema=transformObjectSchema;exports.transformArraySchemaNull=transformArraySchemaNull;exports.transformArraySchemaBoolean=transformArraySchemaBoolean;exports.transformArraySchemaObject=transformArraySchemaObject;exports.transformArraySchemaArray=transformArraySchemaArray;exports.transformArraySchemaString=transformArraySchemaString;exports.transformArraySchemaNumber=transformArraySchemaNumber;exports.transformArraySchema=transformArraySchema;exports.transformNull=transformNull;exports.transformBoolean=transformBoolean;exports.transformObject=transformObject;exports.transformArray=transformArray;exports.transformString=transformString;exports.transformNumber=transformNumber;exports.default=transform;exports.toNumber=exports.toString=exports.toBoolean=exports.toNull=void 0;var _common=require("../common");const toNull=v=>{if(v===null||v==='null')return null;throw new Error('Invalid `null`');};exports.toNull=toNull;const toBoolean=v=>{if(typeof v==='boolean')return v;if(v==='true')return true;if(v==='false')return false;throw new Error('Invalid `boolean`');};exports.toBoolean=toBoolean;const toString=v=>{if(typeof v==='string')return v;if(typeof v==='number')return String(v);return JSON.stringify(v);};exports.toString=toString;const toNumber=v=>{if(typeof v==='number')return v;const n=Number(v);if(!isNaN(n))return n;throw new Error('Invalid `number`');};exports.toNumber=toNumber;function transformObjectSchemaNull({uri:parentUri,key:fieldKey},values){const uri=(0,_common.getUri)(parentUri,fieldKey);if(Reflect.has(values,uri))return toNull(Reflect.get(values,uri));}function transformObjectSchemaBoolean({uri:parentUri,key:fieldKey},values){const uri=(0,_common.getUri)(parentUri,fieldKey);if(Reflect.has(values,uri))return toBoolean(Reflect.get(values,uri));}function transformObjectSchemaObject({properties={}},{uri:parentUri,key:fieldKey},values){const uri=(0,_common.getUri)(parentUri,fieldKey);return Object.entries(properties).reduce((accumulator,[key,schema])=>({...accumulator,[key]:transformObjectSchema(schema,{uri,key},values)}),{});}function transformObjectSchemaArray({items=[]},{uri:parentUri,key:fieldKey},values){const uri=(0,_common.getUri)(parentUri,fieldKey);return Object.keys(values).filter(key=>key.startsWith(uri)).reduce((accumulator,key)=>{const value=key.slice(uri.length+1);const index=Number(value.includes('/')?value.slice(0,value.indexOf('/')):value);if(!isNaN(index)){const schema=Array.isArray(items)?items[index]:items;accumulator[index]=transformArraySchema(schema,{uri,index},values);}return accumulator;},[]);}function transformObjectSchemaString({uri:parentUri,key:fieldKey},values){const uri=(0,_common.getUri)(parentUri,fieldKey);if(Reflect.has(values,uri))return toString(Reflect.get(values,uri));}function transformObjectSchemaNumber({uri:parentUri,key:fieldKey},values){const uri=(0,_common.getUri)(parentUri,fieldKey);if(Reflect.has(values,uri))return toNumber(Reflect.get(values,uri));}function transformObjectSchema(schema={},params={},values={}){const{type}=schema;switch(type){case'null':return transformObjectSchemaNull(params,values);case'boolean':return transformObjectSchemaBoolean(params,values);case'object':return transformObjectSchemaObject(schema,params,values);case'array':return transformObjectSchemaArray(schema,params,values);case'string':return transformObjectSchemaString(params,values);case'number':return transformObjectSchemaNumber(params,values);default:throw new Error('Schema does not conform to Instance Data Model, https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.4.2.1');}}function transformArraySchemaNull({uri:parentUri,index:arrayIndex},values){const uri=(0,_common.getUri)(parentUri,arrayIndex);if(Reflect.has(values,uri))return toNull(Reflect.get(values,uri));}function transformArraySchemaBoolean({uri:parentUri,index:arrayIndex},values){const uri=(0,_common.getUri)(parentUri,arrayIndex);if(Reflect.has(values,uri))return toBoolean(Reflect.get(values,uri));}function transformArraySchemaObject({properties={}},{uri:parentUri,index:arrayIndex},values){const uri=(0,_common.getUri)(parentUri,arrayIndex);return Object.entries(properties).reduce((accumulator,[key,schema])=>({...accumulator,[key]:transformObjectSchema(schema,{uri,key},values)}),{});}function transformArraySchemaArray({items=[]},{uri:parentUri,index:arrayIndex},values){const uri=(0,_common.getUri)(parentUri,arrayIndex);return Object.keys(values).filter(key=>key.startsWith(uri)).reduce((accumulator,key)=>{const value=key.slice(uri.length+1);const index=Number(value.includes('/')?value.slice(0,value.indexOf('/')):value);if(!isNaN(index)){const schema=Array.isArray(items)?items[index]:items;accumulator[index]=transformArraySchema(schema,{uri,index},values);}return accumulator;},[]);}function transformArraySchemaString({uri:parentUri,index:arrayIndex},values){const uri=(0,_common.getUri)(parentUri,arrayIndex);if(Reflect.has(values,uri))return toString(Reflect.get(values,uri));}function transformArraySchemaNumber({uri:parentUri,index:arrayIndex},values){const uri=(0,_common.getUri)(parentUri,arrayIndex);if(Reflect.has(values,uri))return toNumber(Reflect.get(values,uri));}function transformArraySchema(schema={},params={},values={}){const{type}=schema;switch(type){case'null':return transformArraySchemaNull(params,values);case'boolean':return transformArraySchemaBoolean(params,values);case'object':return transformArraySchemaObject(schema,params,values);case'array':return transformArraySchemaArray(schema,params,values);case'string':return transformArraySchemaString(params,values);case'number':return transformArraySchemaNumber(params,values);default:throw new Error('Schema does not conform to Instance Data Model, https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.4.2.1');}}function transformNull(values){const uri=(0,_common.getUri)();if(Reflect.has(values,uri))return toNull(Reflect.get(values,uri));}function transformBoolean(values){const uri=(0,_common.getUri)();if(Reflect.has(values,uri))return toBoolean(Reflect.get(values,uri));}function transformObject({properties={}},values){const uri=(0,_common.getUri)();return Object.entries(properties).reduce((accumulator,[key,schema])=>({...accumulator,[key]:transformObjectSchema(schema,{uri,key},values)}),{});}function transformArray({items=[]},values){const uri=(0,_common.getUri)();return Object.keys(values).filter(key=>key.startsWith(uri)).reduce((accumulator,key)=>{const value=key.slice(uri.length);const index=Number(value.includes('/')?value.slice(0,value.indexOf('/')):value);if(!isNaN(index)){const schema=Array.isArray(items)?items[index]:items;accumulator[index]=transformArraySchema(schema,{uri,index},values);}return accumulator;},[]);}function transformString(values){const uri=(0,_common.getUri)();if(Reflect.has(values,uri))return toString(Reflect.get(values,uri));}function transformNumber(values){const uri=(0,_common.getUri)();if(Reflect.has(values,uri))return toNumber(Reflect.get(values,uri));}function transform(rootSchema={},values={}){const{type}=rootSchema;switch(type){case'null':return transformNull(values);case'boolean':return transformBoolean(values);case'object':return transformObject(rootSchema,values);case'array':return transformArray(rootSchema,values);case'number':return transformNumber(values);case'string':return transformString(values);default:throw new Error('Schema does not conform to Instance Data Model, https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.4.2.1');}}